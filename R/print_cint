#' Print a cint Object
#'
#' Print method for an object of class \code{cint}.
#'
#' @param x A on object of class \code{cint}.
#' @param digits Number of digits used to format sample estimate and confidence limits.
#' @param ... Further arguments passed from other methods.
#' @return Invisibly, the input is returned.
#' @method print cint
#' @export
#' @examples
#' x <- ci_mean(1:100)
#' x
print.cint <- function(x, digits = getOption("digits"), ...) {
  # Calculate prefix from "probs" used in methods info
  if (any(x$probs %in% 0:1)) {
    prefx <- "One-sided"
  } else if (!isTRUE(all.equal(x$probs[1], 1 - x$probs[2]))) {
    prefx <- "Asymmetric two-sided"
  } else {
    prefx <- "Two-sided"
  }
  
  # Method info
  cat("\n")
  cat(strwrap(paste(prefx, .format_p(diff(x$probs), digits = digits),
              x$method, "confidence interval for the", x$parameter, x$info),
      prefix = "\t"), sep = "\n")
  cat("\n")
  
  # Estimate
  cat("Sample estimate:", format(x$estimate, digits = digits), "\n")
  
  # Confidence interval
  names(x$cint) <- .format_p(x$probs, digits = digits)
  cat("Confidence interval:\n")
  print(x$cint[1:2], digits = digits)

  cat("\n")
  invisible(x)
}

# Helper function
.format_p <- function(z, digits = max(2L, getOption("digits"))) {
  paste0(format(100 * z, digits = digits), "%")
}

x <- list(cint = c(0.2323, 0.745345),
          estimate = 0.5567566575677,
          parameter = "true Pearson correlation",
          probs = c(0.0, 0.9999),
          method = "Bootstrap t",
          info = "")
class(x) <- "cint"
x
